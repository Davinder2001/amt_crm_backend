services:
  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: amt_nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/proxy.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/logs:/var/log/nginx
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - app
    networks:
      - amt_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: amt_crm_backend:latest
    container_name: amt_crm_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - app_storage:/var/www/storage
      - app_cache:/var/www/bootstrap/cache
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    env_file:
      - .env
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
    expose:
      - "9000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - amt_network
    healthcheck:
      test: ["CMD", "php", "artisan", "health:check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: amt_crm_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
      MYSQL_INNODB_BUFFER_POOL_SIZE: 1G
      MYSQL_INNODB_LOG_FILE_SIZE: 256M
      MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 2
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./docker/mysql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:3306:3306"
    networks:
      - amt_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: --default-authentication-plugin=mysql_native_password



  # Backup Service
  backup:
    image: alpine:latest
    container_name: amt_crm_backup
    restart: "no"
    volumes:
      - db_data:/var/lib/mysql:ro
      - app_storage:/var/www/storage:ro
      - ./backups:/backups
    environment:
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - amt_network
    command: |
      sh -c '
        apk add --no-cache mysql-client
        mkdir -p /backups/$(date +%Y-%m-%d)
        mysqldump -h db -u $DB_USERNAME -p$DB_PASSWORD $DB_DATABASE > /backups/$(date +%Y-%m-%d)/database_$(date +%H-%M-%S).sql
        tar -czf /backups/$(date +%Y-%m-%d)/storage_$(date +%H-%M-%S).tar.gz -C /var/www/storage .
        find /backups -type d -mtime +7 -exec rm -rf {} +
        echo "Backup completed at $(date)"
      '

volumes:
  db_data:
    driver: local
  app_storage:
    driver: local
  app_cache:
    driver: local

networks:
  amt_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 