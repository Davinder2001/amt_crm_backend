services:
  # Nginx Reverse Proxy with SSL
  nginx-proxy:
    image: nginx:alpine
    container_name: amt_crm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - amt_crm_network

  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amt_crm_app
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - amt_crm_network
    healthcheck:
      test: ["CMD", "php", "artisan", "health:check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: amt_crm_db
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - amt_crm_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  certbot:
    image: certbot/certbot
    container_name: amt_crm_certbot
    volumes:
      - ./docker/nginx/ssl:/etc/letsencrypt/live/api.himmanav.com
      - ./docker/nginx/ssl:/etc/letsencrypt/archive/api.himmanav.com
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./docker/nginx/certbot/www:/var/www/certbot
    entrypoint: ""
    command: >
      sh -c "certbot certonly --webroot -w /var/www/certbot --email himmanav11@gmail.com --agree-tos --no-eff-email -d api.himmanav.com && cp /etc/letsencrypt/live/api.himmanav.com/fullchain.pem /etc/nginx/ssl/fullchain.pem && cp /etc/letsencrypt/live/api.himmanav.com/privkey.pem /etc/nginx/ssl/privkey.pem"
    depends_on:
      - nginx-proxy
    networks:
      - amt_crm_network
    restart: unless-stopped
    # For renewal, run:
    # docker compose run --rm certbot renew --webroot -w /var/www/certbot && docker compose exec nginx-proxy nginx -s reload

networks:
  amt_crm_network:
    driver: bridge 

volumes:
  mysql_data: 