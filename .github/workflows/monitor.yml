name: Monitor Application

on:
  schedule:
    # Run health check every 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
      check_type:
        description: 'Type of check to run'
        required: true
        default: 'health'
        type: choice
        options:
          - health
          - performance
          - resources
          - logs
          - all

env:
  TIMEOUT: 30

jobs:
  health-check:
    if: ${{ github.event.inputs.check_type == 'health' || github.event.inputs.check_type == 'all' || github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER || 'root' }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          timeout: 60s
          script: |
            echo "🏥 Performing health checks..."
            
            # Check if containers are running
            echo "📦 Checking container status..."
            docker compose -f /srv/laravel-backend/docker-compose.yml ps
            
            # Check application health endpoint
            echo "🌐 Checking application health endpoint..."
            if curl -f -s -m ${{ env.TIMEOUT }} http://localhost/health > /dev/null; then
              echo "✅ Application health check passed"
            else
              echo "❌ Application health check failed"
              exit 1
            fi
            
            # Check database connectivity
            echo "🗄️  Checking database connectivity..."
            if docker exec amt_crm_db mysqladmin ping -h localhost --silent; then
              echo "✅ Database is responding"
            else
              echo "❌ Database is not responding"
              exit 1
            fi
            
            # Check disk space
            echo "💾 Checking disk space..."
            df -h | grep -E "/$|/srv"
            
            # Check if critical services are healthy
            echo "🔍 Checking service health..."
            UNHEALTHY=$(docker ps --filter "health=unhealthy" --format "table {{.Names}}\t{{.Status}}")
            if [ -n "$UNHEALTHY" ]; then
              echo "❌ Unhealthy containers found:"
              echo "$UNHEALTHY"
              exit 1
            else
              echo "✅ All containers are healthy"
            fi
            
            echo "✅ All health checks passed!"

  performance-check:
    if: ${{ github.event.inputs.check_type == 'performance' || github.event.inputs.check_type == 'all' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Performance Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER || 'root' }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          timeout: 120s
          script: |
            echo "⚡ Performing performance checks..."
            
            # Response time check
            echo "🕐 Checking response times..."
            for i in {1..5}; do
              response_time=$(curl -o /dev/null -s -w "%{time_total}" http://localhost/health)
              echo "Attempt $i: ${response_time}s"
              
              # Alert if response time is too slow
              if (( $(echo "$response_time > 2.0" | bc -l) )); then
                echo "⚠️  Slow response detected: ${response_time}s"
              fi
            done
            
            # Memory usage
            echo "🧠 Checking memory usage..."
            docker stats --no-stream --format "table {{.Names}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}"
            
            # Check for high memory usage
            HIGH_MEM=$(docker stats --no-stream --format "{{.MemPerc}}" | sed 's/%//' | awk '$1 > 80')
            if [ -n "$HIGH_MEM" ]; then
              echo "⚠️  High memory usage detected"
            fi
            
            # Check Laravel logs for errors
            echo "📋 Checking recent errors..."
            ERROR_COUNT=$(docker exec amt_crm_app tail -n 100 /var/www/storage/logs/laravel.log 2>/dev/null | grep -c "ERROR\|CRITICAL" || echo "0")
            echo "Recent errors in logs: $ERROR_COUNT"
            
            if [ "$ERROR_COUNT" -gt 10 ]; then
              echo "⚠️  High error count detected: $ERROR_COUNT errors"
              docker exec amt_crm_app tail -n 20 /var/www/storage/logs/laravel.log || echo "Could not read logs"
            fi

  resource-check:
    if: ${{ github.event.inputs.check_type == 'resources' || github.event.inputs.check_type == 'all' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Resource Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER || 'root' }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          timeout: 60s
          script: |
            echo "📊 Checking system resources..."
            
            # System load
            echo "⚖️  System load:"
            uptime
            LOAD=$(uptime | awk -F'load average:' '{ print $2 }' | awk '{ print $1 }' | sed 's/,//')
            if (( $(echo "$LOAD > 4.0" | bc -l) )); then
              echo "⚠️  High system load detected: $LOAD"
            fi
            
            # Memory usage
            echo "🧠 Memory usage:"
            free -h
            MEM_USAGE=$(free | grep Mem | awk '{printf "%.0f", $3/$2 * 100.0}')
            echo "Memory usage: ${MEM_USAGE}%"
            if [ "$MEM_USAGE" -gt 85 ]; then
              echo "⚠️  High memory usage: ${MEM_USAGE}%"
            fi
            
            # Disk usage
            echo "💾 Disk usage:"
            df -h
            DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
            echo "Root disk usage: ${DISK_USAGE}%"
            if [ "$DISK_USAGE" -gt 85 ]; then
              echo "⚠️  High disk usage: ${DISK_USAGE}%"
            fi
            
            # Docker resource usage
            echo "🐳 Docker resource usage:"
            docker system df
            
            # Network connections
            echo "🌐 Active connections:"
            netstat -tuln | grep :80
            
            # Check for zombie processes
            echo "🧟 Checking for zombie processes..."
            ZOMBIES=$(ps aux | awk '$8 ~ /^Z/ { print $2 }' | wc -l)
            if [ "$ZOMBIES" -gt 0 ]; then
              echo "⚠️  Zombie processes detected: $ZOMBIES"
            fi

  logs-check:
    if: ${{ github.event.inputs.check_type == 'logs' || github.event.inputs.check_type == 'all' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Logs Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER || 'root' }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          timeout: 60s
          script: |
            echo "📋 Checking application logs..."
            
            # Laravel application logs
            echo "🐘 Laravel logs (last 10 lines):"
            if docker exec amt_crm_app test -f /var/www/storage/logs/laravel.log; then
              docker exec amt_crm_app tail -n 10 /var/www/storage/logs/laravel.log
              
              # Check for critical errors in last hour
              CRITICAL_ERRORS=$(docker exec amt_crm_app grep -c "CRITICAL\|EMERGENCY" /var/www/storage/logs/laravel.log 2>/dev/null || echo "0")
              if [ "$CRITICAL_ERRORS" -gt 0 ]; then
                echo "🚨 Critical errors found: $CRITICAL_ERRORS"
              fi
            else
              echo "No Laravel logs found"
            fi
            
            # Nginx access logs
            echo "🌐 Nginx access logs (last 5 lines):"
            if docker exec amt_crm_nginx test -f /var/log/nginx/access.log; then
              docker exec amt_crm_nginx tail -n 5 /var/log/nginx/access.log
            else
              echo "No Nginx access logs found"
            fi
            
            # Nginx error logs
            echo "❌ Nginx error logs (last 5 lines):"
            if docker exec amt_crm_nginx test -f /var/log/nginx/error.log; then
              docker exec amt_crm_nginx tail -n 5 /var/log/nginx/error.log
            else
              echo "No Nginx error logs found"
            fi
            
            # Docker container logs
            echo "🐳 Recent container logs:"
            docker compose -f /srv/laravel-backend/docker-compose.yml logs --tail=5
            
            # Check for container restarts
            echo "🔄 Checking container restart counts..."
            docker ps --format "table {{.Names}}\t{{.Status}}" | grep -v "NAMES"

  security-check:
    if: ${{ github.event.inputs.check_type == 'security' || github.event.inputs.check_type == 'all' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Security Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER || 'root' }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          timeout: 60s
          script: |
            echo "🔒 Performing security checks..."
            
            # Check for failed login attempts
            echo "🚫 Checking failed login attempts..."
            FAILED_LOGINS=$(grep "Failed password" /var/log/auth.log 2>/dev/null | tail -n 10 | wc -l || echo "0")
            echo "Recent failed login attempts: $FAILED_LOGINS"
            
            # Check open ports
            echo "🌐 Checking open ports..."
            netstat -tuln | grep LISTEN
            
            # Check SSL certificate expiry (if applicable)
            echo "📜 Checking SSL certificate..."
            if command -v openssl >/dev/null 2>&1; then
              if [ -n "${{ secrets.APP_URL }}" ] && [[ "${{ secrets.APP_URL }}" == https* ]]; then
                DOMAIN=$(echo "${{ secrets.APP_URL }}" | sed 's|https://||' | sed 's|/.*||')
                openssl s_client -servername "$DOMAIN" -connect "$DOMAIN:443" </dev/null 2>/dev/null | openssl x509 -noout -dates 2>/dev/null || echo "Could not check SSL certificate"
              fi
            fi
            
            # Check file permissions
            echo "📁 Checking critical file permissions..."
            ls -la /srv/laravel-backend/.env* 2>/dev/null || echo "No .env files found"

  notify-failure:
    if: failure()
    needs: [health-check, performance-check, resource-check, logs-check, security-check]
    runs-on: ubuntu-latest
    
    steps:
      - name: Notify on Failure
        run: |
          echo "🚨 Monitoring checks failed!"
          echo "📊 Failure Summary:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Check Type: ${{ github.event.inputs.check_type || 'scheduled' }}"
          echo "- Time: $(date)"
          echo "- Environment: Production"
          echo "🔍 Check the logs above for details." 