# HTTP server configuration for AMT CRM Backend
server {
    listen 80;
    server_name api.himmanav.com localhost;

    # Root directory
    root /var/www/public;
    index index.php index.html index.htm;

    # General rate limiting
    limit_req zone=general burst=50 nodelay;

    # Handle Laravel routes
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # API rate limiting with specific rules
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        # CORS headers for API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Authentication endpoints with stricter rate limiting
    location ~* /api/(login|register|forgot-password|reset-password|verify-otp) {
        limit_req zone=login burst=5 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Laravel routes endpoint
    location /api/routes {
        access_log off;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP-FPM configuration with upstream
    location ~ \.php$ {
        fastcgi_pass laravel_backend;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # FastCGI optimizations
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_connect_timeout 60;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        
        # Security headers for PHP
        fastcgi_hide_header X-Powered-By;
        add_header X-Powered-By "Laravel" always;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /\.(ht|env|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to configuration files
    location ~* \.(env|log|sql|conf|ini|bak|swp|swo)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Static file caching with better optimization
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        try_files $uri =404;
    }

    location ~* \.(css|js|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        try_files $uri =404;
    }

    location ~* \.(pdf|txt|doc|docx|xls|xlsx|ppt|pptx)$ {
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
        try_files $uri =404;
    }

    # Laravel storage files (with security)
    location /storage/ {
        alias /var/www/storage/app/public/;
        expires 1y;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # Error pages
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Security: Hide server version
    server_tokens off;
} 